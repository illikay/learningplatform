/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    jacoco
    id("io.freefair.lombok") version "8.3"
    id ("com.github.ben-manes.versions") version "0.48.0"

}



tasks.named<Test>("test") {
    useJUnitPlatform()

    maxHeapSize = "1G"

    testLogging {
        events("passed")
    }
}


tasks.test {
    finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}
tasks.jacocoTestReport {
    dependsOn(tasks.test) // tests are required to run before generating the report
}

repositories {
    mavenCentral()
    mavenLocal()

}

dependencies {
    api("org.springframework.boot:spring-boot-starter-data-jpa:3.1.3")
    api("org.springframework.boot:spring-boot-starter-web:3.1.3")
    api("org.springframework.boot:spring-boot-starter-security:3.1.3")
    api("org.projectlombok:lombok:1.18.28")
    api("io.jsonwebtoken:jjwt-api:0.11.5")
    api("io.jsonwebtoken:jjwt-impl:0.11.5")
    api("io.jsonwebtoken:jjwt-jackson:0.11.5")
    api("org.springframework.boot:spring-boot-starter-validation:3.1.3")
    api("org.yaml:snakeyaml:2.2")
    runtimeOnly("com.mysql:mysql-connector-j:8.1.0")
    testImplementation("org.testcontainers:junit-jupiter:1.19.0")
    testImplementation("org.testcontainers:mysql:1.19.0")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.1.3")
    testImplementation("org.springframework.security:spring-security-test:6.1.3")
    testImplementation("io.rest-assured:rest-assured:5.3.2")
    testImplementation("org.hamcrest:hamcrest-all:1.3")

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")


    implementation("org.springframework.boot:spring-boot-starter-logging:3.1.3")




    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

}

group = "com.kayikci"
version = "0.0.1-SNAPSHOT"
description = "learningplatform"



publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
